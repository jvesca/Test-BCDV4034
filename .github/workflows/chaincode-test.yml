name:  CI

on:
  push:
    branches: [ main ]
    paths:
      - 'chaincode/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'chaincode/**'

jobs:
  verify-chaincode:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Install dependencies
      working-directory: ./chaincode
      run: npm install

    - name: Verify Node.js setup
      working-directory: ./chaincode
      run: node -e "console.log('Chaincode setup verified')"

    - name: Check for syntax errors
      working-directory: ./chaincode
      run: | 
        node --check lib/waterDonation.js
        npm run lint:json

    - name: Run unit tests
      working-directory: ./chaincode
      run: npm test

    - name: Run linter
      working-directory: ./chaincode
      run: npm run lint
    
    - name: Set up Fabric
      run: |
        curl -sSL https://bit.ly/2ysbOFE | bash -s -- 2.2.0 1.4.9
        export PATH=$PATH:$PWD/fabric-samples/bin
        export FABRIC_CFG_PATH=$PWD/fabric-samples/config

    - name: Run basic integration test
      working-directory: ./chaincode
      run: |
        # Create a test network
        cd ../fabric-samples/test-network
        ./network.sh up createChannel -c mychannel -ca

        # Deploy the chaincode
        ./network.sh deployCC -ccn water_donation -ccv 1.0 -ccp ../../chaincode -ccl javascript

        # Set up environment for Org1
        export CORE_PEER_TLS_ENABLED=true
        export CORE_PEER_LOCALMSPID="Org1MSP"
        export CORE_PEER_TLS_ROOTCERT_FILE=${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt
        export CORE_PEER_MSPCONFIGPATH=${PWD}/organizations/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp
        export CORE_PEER_ADDRESS=localhost:7051

        # Invoke the chaincode to create a donation
        peer chaincode invoke -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --tls --cafile ${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem -C mychannel -n water_donation -c '{"function":"createDonation","Args":["donation1", "donor1", "recipient1", "100"]}'

        # Query the chaincode
        peer chaincode query -C mychannel -n water_donation -c '{"function":"queryDonation","Args":["donation1"]}'

        # Clean up
        ./network.sh down