name:  CI

on:
  push:
    branches: [ main ]
    paths:
      - 'chaincode/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'chaincode/**'

jobs:
  verify-chaincode:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Install dependencies
      working-directory: ./chaincode
      run: npm install

    - name: Verify Node.js setup
      working-directory: ./chaincode
      run: node -e "console.log('Chaincode setup verified')"

    - name: Check for syntax errors
      working-directory: ./chaincode
      run: | 
        node --check lib/waterDonation.js
        node --check collections_config.json

    - name: Run unit tests
      working-directory: ./chaincode
      run: npm test

    - name: Run linter
      working-directory: ./chaincode
      run: npm run lint

    - name: Run integration tests
      working-directory: ./chaincode
      run: |
        ./network.sh down
        ./network.sh up createChannel -ca -c mychannel -s couchdb
        ./addOrg3.sh up
        export CORE_PEER_TLS_ENABLED=true
        export CORE_PEER_LOCALMSPID="Org3MSP"
        export CORE_PEER_TLS_ROOTCERT_FILE=${PWD}/organizations/peerOrganizations/org3.example.com/peers/peer0.org3.example.com/tls/ca.crt
        export CORE_PEER_MSPCONFIGPATH=${PWD}/organizations/peerOrganizations/org3.example.com/users/Admin@org3.example.com/msp
        export CORE_PEER_ADDRESS=localhost:11051
        export PATH=${PWD}/../bin:$PATH
        export FABRIC_CFG_PATH=$PWD/../config/
        ./network.sh deployCC -ccn water_donation -ccv 1.0 -ccp ../aquatrust-chain/chaincode -ccl javascript -cccg ../aquatrust-chain/chaincode/collections_config.json -ccep "OR('Org1MSP.member','Org2MSP.member','Org3MSP.member')"
        peer lifecycle chaincode install water_donation.tar.gz
        export PACKAGE_ID=$(peer lifecycle chaincode queryinstalled | grep "water_donation_1.0:" | sed 's/Package ID: //; s/, Label:.*//')
        peer lifecycle chaincode approveformyorg -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --channelID mychannel --name water_donation --version 1.0 --package-id $PACKAGE_ID --sequence 1 --tls --cafile ${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem --collections-config ../aquatrust-chain/chaincode/collections_config.json --signature-policy "OR('Org1MSP.member','Org2MSP.member','Org3MSP.member')"
        peer lifecycle chaincode commit -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --channelID mychannel --name water_donation --version 1.0 --sequence 1 --tls --cafile ${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem --collections-config ../aquatrust-chain/chaincode/collections_config.json --signature-policy "OR('Org1MSP.member','Org2MSP.member','Org3MSP.member')"
        peer chaincode invoke -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --tls --cafile ${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem -C mychannel -n water_donation -c '{"function":"initLedger","Args":[]}'
        peer chaincode query -C mychannel -n water_donation -c '{"Args":["queryAllDonations"]}'

